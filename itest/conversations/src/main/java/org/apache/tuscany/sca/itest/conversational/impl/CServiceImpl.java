/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.    
 */
package org.apache.tuscany.sca.itest.conversational.impl;

import org.apache.tuscany.sca.itest.conversational.CService;
import org.apache.tuscany.sca.itest.conversational.DService;
import org.oasisopen.sca.ServiceReference;
import org.oasisopen.sca.annotation.Reference;
import org.oasisopen.sca.annotation.Scope;
import org.oasisopen.sca.annotation.Service;

/**
 * Simple conversational Service that uses another Conversational Service
 */
@Service(CService.class)
@Scope("CONVERSATION")
public class CServiceImpl implements CService {

    private ServiceReference<DService> dServiceRef;

    @Reference(name = "d")
    public void setD(ServiceReference<DService> servRef) {
        this.dServiceRef = servRef;
    }

    public String getState() {
        return dServiceRef.getService().getState();
    }

    public void setState(String aState) {
        dServiceRef.getService().setState(aState);
    }

    /*
     * When the coversationId is set manually the client may access the 
     * conversation id that will be used by the reference using 
     * ServiceReference.getConversationId()
     */
    public Object getConversationID() {
        return dServiceRef.getConversationID();
    }

    /*
     * Whether the conversation ID is chosen by the client or is generated by
     * the system, the client may access the conversation ID by calling
     * Conversation.getConversationID().
     */
    public Object getConversationObjectConversationId() {
        // TODO Auto-generated method stub
        if (dServiceRef.getConversation() != null) {
            return dServiceRef.getConversation().getConversationID();
        } else {
            return null;
        }
    }

    public void endConversation() {
        dServiceRef.getConversation().end();
    }

    public void endConversationViaAnnotatedMethod() {
        dServiceRef.getService().endConversationViaAnnotatedMethod();
    }

    public void setConversationID(String theID) {
        dServiceRef.setConversationID(theID);
    }
}
