<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (c) 2005 The Apache Software Foundation or its licensors, as applicable.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
 -->
<document url="index.xml">
	<properties>
		<author email="someone@apache.org">someone</author>
		<title>Apache Tuscany</title>
	</properties>
	<body>
		<section name="Apache Tuscany">
			<p>
				Welcome to Apache Tuscany. The Apache Tuscany project is currently in incubation within the 
				Apache Incubator.
			</p>
                        <p>
			The Apache Tuscany project simplifies the development of business solutions that use a service-oriented 
architecture. It allows new solutions to be constructed by combining new or existing services within an 
easy to configure service oriented run time with little or no programming.  It does this by providing  
implementations for the Service Component Architecture (SCA) and Service Data Object (SDO) 
specifications and by defining Data Access Services built on SDO.  
Specifications for SDO and SCA can be found on the <a href="documentation.html">Documentation page</a>
			</p>
                        <p>
  SCA provides developers with a simple, business-oriented, model for creating systems based on a service 
  oriented architecture. It manages infrastructure complexities such as transactions, security and reliable 
  messaging and frees the developer to focus on providing business function.  The solutions developed using 
  SCA can be changed declaratively to alter infrastructure capabilities or application configuration properties 
  to meet changing business requirements. For example, infrastructure capabilities such as security policies 
  may change from one environment to another and can be changed without the need for re-implementation.  
  Application configuration may also be changed in this way, for example, the currency quoted by a stock 
  quote feed may be changed though the SCA configuration mechanism. 
                        </p>
                        <p>
  SCA divides up the steps in building a service-oriented application into two major parts:
  <ul>
  <li>
  The Implementation of components which provide services and consume other services. SCA 
  supports service implementations written using any one of many programming languages, both including 
  conventional object-oriented and procedural languages such as Java<sup>tm</sup>, PHP, C ++. XML-centric languages 
  such as BPEL and XSLT, and also declarative languages such as SQL and XQuery. SCA also supports a 
  range of programming styles, including asynchronous and message-oriented styles, in addition to the 
  synchronous call-and-return style.
</li>
<li>
The Assembly of sets of components to build composite business applications that addresses specific business requirements. This is performed by wiring together the service implementation components.  
</li>
</ul>
 For more information about SCA read the white paper Service Component Architecture-Building Systems using a Service Oriented Architecure on the <a href="documentation.html">Documentation page</a>.
The Tuscany project provides runtime implementation of SCA in both Java and C++.
                        </p>
                        <p>
  SDO provides Tuscany with a consistent mechanism for describing and manipulating data regardless of the 
  source data resource, the target data resource or, indeed, the environment in which the data is to be 
  processed . Along side this SDO also maintains a change history for data as well as ensuring referential 
  integrity based on a defined schema. These features allow developers to focus on data processing tasks 
  rather that the specific nature of data retrieval mechanisms as it arrives at and is dispatch from a service. 
  To further understand the benefits of SDO please refer to the "Next Generation Data Programming: Service 
  Data Objects"on the <a href="documentation.html">Documentation page</a>. 
  Tuscany implements SDO in Java and C++. A PHP implementation of SDO is also available under <script type="text/javascript">linkNewWindow('http://pecl.php.net/package/sdo','PECL' );</script>.
                        </p>
                        <p>
RDB DAS provides a generic data access service that provides transformation capability between SDO data graphs and relational databases and vise versa.
To further explore the benefits of DAS please refer to white paper "DAS White Paper: The Data Access Service"  on the <a href="documentation.html">Documentation page</a>.  
                        </p>
<p>
You can get a feel for what it's like to create simple applications using Tuscany by trying out the Sample Programs that are supplied with the Tuscany project.
For Java look at the <a href="installjava.html" >Installation instructions for Java Projects</a> page and then follow the Samples README.
For C++ go to the <a href="installcpp.html" >Installation Instructions for C++ Projects</a> page.
                        </p>
                        <p>
The specifications for SDO and SCA can be found on the <a href="documentation.html">Documentation page</a>:<br/> 
<ul>
<li>
The SCA 0.9 Assembly Model specification 
</li>
<li>
The SCA 0.9 Client and Implementation Model specifications - for Java and for C++ 
</li>
<li>
The SDO 2.01 specifications - for Java and for C++
</li>
</ul>
                        </p>
                        <p>     Tuscany is very interested in getting your comments or any feedback you may have.  Please feel free
                                to post these on the mailing lists.  Mailing list information is available in the <a href="mail-lists.html">Project Mailing Lists</a> section.
                                We look forward to your involvement in Tuscany.  
			</p>
		</section>
		<section name="Tuscany Subprojects">
			<p>
				Tuscany consists of 5 subprojects, each dealing with different aspects of the SOA programming model:
				<ol>
					<li>SCA Runtime for Java</li>
					<li>SDO 2.0 Runtime for Java</li>
					<li>Data Access Service for Java</li>
					<li>SCA Runtime for C++</li>
					<li>SDO 2.0 Runtime for C++</li>
				</ol>
			</p>
		</section>
		<section name="What's New?">
			<p>
				(March 6 2006) The codebase has reached a first stable milestone at SVN revision 383106.
				Both the Java and C++ projects have advanced to provide end-to-end support for a range of
				scenarios.  For the Java project, the codebase now integrates with Apache Tomcat 5.5.15 and Axis 2.0. 
				There is a substantial set of working samples for the SCA, SDO and DAS subprojects, which can run on
				Windows, Linux and Mac.  There is also support for writing service components in Javascript.
			</p>
			<p>
				With this combination you can write service components that provide Web services or that provide 
				business services supporting a Web UI based on Servlets and JSPs.
			</p>
			<p>
				(Jan 10 2006) The current code in the Tuscany
				project is an initial implementation, which is still
				very much evolving. We're looking to add a lot of
				additional function over the coming weeks and months,
				such as support for additional implementation types and
				for additional bindings. We're looking for people to
				help us add these capabilities - so please take some
				time to look over the project and join us in this
				exciting developement.
			</p>
		</section>
	</body>
</document>
