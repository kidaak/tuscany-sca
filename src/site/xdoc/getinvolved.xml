<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (c) 2005 The Apache Software Foundation or its licensors, as applicable.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
 -->
<document url="getinvolved.xml">

	<properties>
		<author email="mgmarum@us.ibm.com">Matthew Marum</author>
		<title>Apache Tuscany - Get Involved</title>
	</properties>

	<body>
		<section name="Getting Involved with Apache Tuscany">
			<p>
				Here is a short guide on how to get involved with Apache Tuscany.
			</p>
		</section>
		<section name="How to get involved">
			<p>Tuscany has a mailing list and this should be your first port of call.  The list
			is tuscany-dev@ws.apache.org.  You can subscribe to this mailing list by sending a 
			message to tuscany-dev-subscribe@ws.apache.org.
			</p>
			<p>The Tuscany code is held in a Subversion repository.  Subversion is a code control
			system similar in function to CVS.  Subversion is used as the code repository by many
			Apache projects.  If you are not familiar with Subversion, see the 
			section below "Using Subversion".
			</p>
			<p>The Tuscany Subversion repository is found at 
			<a href="https://svn.apache.org/repos/asf/incubator/tuscany">
			https://svn.apache.org/repos/asf/incubator/tuscany</a>. You can check out the
			Tuscany code from the repository and build it on your own machine. 
			</p>
			<p>Inside the Tuscany repository, you will find two main directories containing code:
			<ul>
				<li>cpp - which holds the code for the C++ projects</li>
				<li>java - which holds the code for the Java projects</li>
			</ul>
			The Java code is built using Apache Maven.  There is a section below which describes
			how to set up and use Maven.
			</p>
			
		</section>
		<section name="Using Subversion (Command Line)">
			<p>
				You can find and download Subversion here:
					<a href="http://subversion.tigris.org/">
						http://subversion.tigris.org/
					</a>
			</p>
			<p>
				There is a Subversion Reference manual ("the book"):
				<a href="http://svnbook.red-bean.com/">
					http://svnbook.red-bean.com/
				</a>
			</p>
			<p>
				<span style="font-size: 10pt;">
					If you use Eclipse as your development environment, there is a plugin available
					which enables you to use Subversion from within Eclipse (ie it is a Subversion
					client for Eclipse).  This plugin is called Subclipse and it is located at:
					<span style="" />
					<a href="http://subclipse.tigris.org/">
						http://subclipse.tigris.org/
					</a>
					<span style="" />
				</span>
			</p>
			<p style="margin-right: -0.25in;">
				<span style="font-size: 10pt;">
					If you use Windows on your systems, there is also a graphical client implemented as an
					extension to the Windows shell, called TortoiseSVN:
					<span style="" />
					http://tortoisesvn.tigris.org/
				</span>
			</p>
			<span style="font-size: 14pt;">
					Common Commands for Subversion
			</span>
			<p>
				<b style="">
					<i style="">To check out the Java project:</i>
				</b>
			</p>
			<pre>
svn co https://svn.apache.org/repos/asf/incubator/tuscany/java
			</pre>
			<p>
				<b style="">
					<i style="">To check out the C++ project:</i>
				</b>
			</p>
			<pre>
svn co https://svn.apache.org/repos/asf/incubator/tuscany/cpp
			</pre>
			<p>
				If it worked, you will see all the files as they
				checkout followed by a revision number - this is the
				version of the tree that you have (useful for comparing notes)
			</p>
			<p>
				<b style="">
					<i style="">
						To update your copy with other's people's committed changes:
					</i>
				</b>
			</p>
			<pre>
svn update
			</pre>
			<p>
				<b>
					<i>To manipulate files in various ways:</i>
				</b>
			</p>
			<pre>
svn add

svn move

svn remove

svn diff
			</pre>
			<p>
				<b>
					<i>To commit changes go to the root and:</i>
				</b>
			</p>
			<pre>
svn commit -m"change comment"
			</pre>
			<p>
				This will commit the entire tree and display the new
				revision number. You can also commit sub-trees and
				individual files but this is not normal.
			</p>
			<p>
				<b>
					<i>To undo changes:</i>
				</b>
			</p>
			<pre>svn revert ${file}</pre>
			<pre>svn revert -R ${directory}
			</pre>
			<p>
				<b>
					<i>To see what has changed locally:</i>
				</b>
			</p>
			<pre>svn status</pre>
			<p style="margin-left: 0.5in;">
				<b>
					<i>Results:</i>
				</b>
			</p>
			<p>
				A means a file has been added locally
			</p>
			<p>
				D means a file has been deleted locally
			</p>
			<p>
				M means a file has been modified locally
			</p>
			<p>
				? means a file exists locally that is not being managed
				by svn.
				<span style="" />
				Typically this means you forgot to add it with
				<span style="font-family: Courier;">svn add</span>
				.
			</p>
			<p style="margin-left: 1in;">
				! means a file that was being managed by svn no longer
				exists locally.
				<span style="" />
				Typically this means you didn't delete it using svn
				remove.
			</p>
		</section>


		<section name="Using JDK 5">
			<p>
				<span style="">
					<span style="font-size: 10pt;">
						The Tuscany Java projects depend on J2SE version 5.x.  Here is a link 
						to download Sun's J2SE JDK 5.0:
						<span style="" />
					</span>
				</span>
				<a href="http://java.sun.com/j2se/1.5.0/download.jsp">
					<span style="">
						<span style="font-size: 10pt;">
							http://java.sun.com/j2se/1.5.0/download.jsp
						</span>
					</span>
					<span style="" />
				</a>
				<span style="">
					<span style="font-size: 10pt;" />
				</span>
			</p>
			<p>
				<span style=""><!--[if !supportEmptyParas]--><!--[endif]-->
				</span>
			</p>
		</section>


		<section name="Using Eclipse">
			<p>
				<span style="font-size: 10pt;">
					Link to Eclipse download :
					<span>
						<a
							href="http://www.eclipse.org/downloads/index.php">
							http://www.eclipse.org/downloads/index.php
						</a>
					</span>
				</span>
			</p>
			<p>
				Getting Started documentation:
						<a href="http://www.eclipse.org/downloads/index.php">
							http://www.eclipse.org/downloads/index.php
						</a>
			</p>
			<p>
				To create the eclipse projects to use for SCA development:
			</p>
			<p>
				1) When checking code out from subversion, checkout the
					subversion trunk to a location outside your eclipse
					workspace (it has to be outside because Eclipse will
					not allow you to import projects from a location
					overlapping with your workspace)
			</p>
			<p style="margin-left: 0.5in; text-indent: -0.25in;"><!--[if !supportLists]-->
				2) Go to Import / Existing projects into workspace.
					<span style="" />
					Select either the runtime, spec, tools or samples
					directory.
					<span style="" />
					The wizard proposes the list of Eclipse projects
					under that directory. Importing the projects does
					not copy the files; it just makes the files at that
					location visible under an Eclipse project.
			</p>
			<p>
				3) If you need to use Eclipse to edit files outside of
					these projects (for example the etc directory, or
					the maven files at the root of the trunk), then
					delete the Eclipse projects, with the option to not
					delete the files, and import the whole trunk as a
					project.
			</p>
		</section>

		<section name="Using Subclipse">
			<p>
				Install the Subversion Eclipse Plugin as described here:
				<a href="http://subclipse.tigris.org/">http://subclipse.tigris.org/
				</a>
			</p>
			<ol>
				<li>
				Open the SVN Repository Exploring perspective
				</li>
			
				<li>
				Right click in the SVN Repository view.
				
				</li>
				<li>Select "New" and "Repository Location" 
				
				</li>
				<li>
				Url:
					<a href="http://svn.apache.org/repos/asf/incubator/tuscany">
					http://svn.apache.org/repos/asf/incubator/tuscany
				</a>
					<p>
						Use URL https://svn.apache.org/repos/asf/incubator/tuscany if you
						have committer rights and need to commit changes back to the repository.
					</p>
				</li>
				<li>
					Select the "Finish" button and allow Subclipse time to access the repository and
					display its contents in the SVN Repository explorer.  Once the repository is displayed
					in the explorer, you will see a number of subfolders displayed.  The ones that are
					relevant are "java", "cpp" and "site" - which contain the Tuscany Java runtime, the
					Tuscany C++ runtime and the Tuscany website material respectively.
				</li>
				<li>
					Select the folder you want to check out as a project - one of java, cpp or site for example
					Right click, select "Checkout" and "Checkout using new project wizard" - select the appropriate
					options for your needs and then click "Finish"
				</li>
			</ol>
			<p>
				You can check in changes using the "Commit" item in the team submenu of the Java perspective.
			</p>
		</section>

		<section name="Using Maven">
			<p>
				Tuscany uses Maven 2.x. Maven can be found here:
				<a href="http://maven.apache.org/">http://maven.apache.org/</a>
			</p>
			<p>
				For some help getting started with Maven, look at:
				<a href="http://maven.apache.org/guides/getting-started/index.html">
					http://maven.apache.org/guides/getting-started/index.html
				</a>
			</p>
			<p>
				There is a Maven plug-in for Eclipse called Mevenide which you can find here:
				<a href="http://mevenide.codehaus.org/download.html">
					http://mevenide.codehaus.org/download.html
				</a>
			</p>
			<p>
				With Maven, there is no build "script" like the ant build.xml file. Instead you 
				provide Maven with a description of your project and it uses that information to
				determine how to achieve your build goal. The description is held in a pom.xml file.
				There is a pom.xml file at the top level of your project and there are subsidiary
				pom.xml files for modules within your project which are referenced from the top level
				pom file. The Maven project has also established a set of best practices for
				structuring builds and if you follow those you can get away with very little 
				description; the Tuscany builds are set up that way.
			</p>
			<p>
				The general rule for maven is that each (sub)project produces one build artifact 
				(typically a jar file). You can see this in the java project directory where
				there are separate projects for sca, sdo, das (etc) and within these, separate
				folders and pom files for major components such as container.java.
			</p>
			<p>
				The main Maven 2.x command is "mvn" and the default goal is "install" which will 
				compile, unit test and package each project. This will typically output a
				jar file that is installed locally so that other projects can depend on it.
			</p>
		</section>
		<section name="Using Tomcat 5.5.12">
			<p>
				The Tuscany runtime can be used as a server in conjunction with Tomcat, which you can find
				here: <a href="http://tomcat.apache.org/">
						http:/tomcat.apache.org/
				</a>
			</p>
			<p>
				Download "The Core" Tomcat 5.5.12 from:
				<a href="http://tomcat.apache.org/download-55.cgi#5.5.12">
					http://tomcat.apache.org/download-55.cgi#5.5.12
				</a>
			</p>
		</section>

	</body>

</document>