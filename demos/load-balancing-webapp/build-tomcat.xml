<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
-->
<project name="TomcatZipInstaller">
    
	<!--property name="tomcat.series" value="6"/>
    <property name="tomcat.version" value="6.0.16"/-->
	<property name="tomcat.series" value="5"/>
	<property name="tomcat.version" value="5.5.26"/>
    <property name="unpack.location" value="${basedir}/target/tomcat"/>
	<property name="repo.location" value="${basedir}/target/repo"/>
    
    <target name="check-tomcat-downloaded">
        <condition property="already.downloaded" >
            <available file="${repo.location}/apache-tomcat-${tomcat.version}.zip"/>
        </condition>
        <condition property="maven.suffix" value="">
            <os family="unix"/>
        </condition>
        <condition property="maven.suffix" value=".bat">
            <os family="windows"/>
        </condition>
    </target>
    
    <target name="download-tomcat" depends="check-tomcat-downloaded" unless="already.downloaded">
        <mkdir dir="${repo.location}"/>
        <get src="http://www.apache.org/dist/jakarta/tomcat-${tomcat.series}/v${tomcat.version}/bin/apache-tomcat-${tomcat.version}.zip"
            dest="${repo.location}/apache-tomcat-${tomcat.version}.zip"
            verbose="true"
            usetimestamp="true"/>
    </target>
  
    <target name="check-tomcat-unpacked">
        <condition property="already.unpacked" >
            <available file="${unpack.location}-${port}"/>
        </condition>
    </target>

    <target name="unpack-tomcat" depends="check-tomcat-downloaded, check-tomcat-unpacked" unless="already.unpacked">
        <fail message="tomcat zip file not downloaded" unless="already.downloaded"/>
        <mkdir dir="${unpack.location}-${port}/"/>
        <unzip src="${repo.location}/apache-tomcat-${tomcat.version}.zip"
               dest="."
               overwrite="false">
        </unzip>
    	<move file="apache-tomcat-${tomcat.version}"
    	      tofile="${unpack.location}-${port}/"
    	      overwrite="false"
    	      verbose="false"/>
    	<delete dir="apache-tomcat-${tomcat.version}"/>
    </target>
	
	<target name="configure-tomcat" depends="check-tomcat-downloaded, check-tomcat-unpacked">
        <fail message="tomcat zip file not downloaded" unless="already.downloaded"/>
		<fail message="tomcat zip file not unpacked" unless="already.unpacked"/>
        <copy todir="${unpack.location}-${port}/"
        	  overwrite="true"
              verbose="false">
            <fileset dir="${basedir}/src/test/resources/tomcat-${port}"/>
        </copy>
		<mkdir dir="${unpack.location}-${port}/webapps/balancer/WEB-INF/classes/org"/>
        <copy todir="${unpack.location}-${port}/webapps/balancer/WEB-INF/classes/org"
              overwrite="true"
              verbose="false">
            <fileset dir="${basedir}/target/classes/org"/>
        </copy>	
		
    </target>
	
    <target name="copy-webapp" depends="check-tomcat-downloaded, check-tomcat-unpacked">
        <fail message="tomcat zip file not downloaded" unless="already.downloaded"/>
        <fail message="tomcat zip file not unpacked" unless="already.unpacked"/>
        <copy file="${basedir}/target/demo-load-balancing-webapp.war"
              todir="${unpack.location}-${port}/webapps/"
              overwrite="true"
              verbose="false">
        </copy>         
    </target>	

</project>
