<!--
  Copyright (c) 2005 The Apache Software Foundation or its licensors, as applicable.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
 -->
<html><head>

    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">

    <meta http-equiv="Content-Style-Type" content="text/css">
    <title>Tuscany Customers</title><!-- LINK rel="stylesheet" href="ait.css" type="text/css" --></head>

<body>

<h2>Tuscany Customer Sample</h2>

<h3>Overview</h3>

<p>This sample employs the Tuscany runtime in collaboration with the RDB DAS to demonstrate a simple read of a customer 
record from a relational database in the context of a web application.  The user provides a customer 
ID and the application responds with the corresponding customer record </p>


<h3>Setup</h3>Run the Maven 'acceptance' task as described in the <a href="../readme.htm#Tomcat_Setup" target="_blank">Tomcat
    Setup</a>. &nbsp;Running this task will configure and start a Tomcat server and deploy the sample application along with a 
canned Derby database for use by the example.  Instructions will be posted soon for manually deploying the 
sample to an existing Tomcat install.<br>


<ol>

</ol>

<h3>Running</h3>

As mentioned above, running the Maven acceptance task deploys and runs the sample as part of the Tuscany acceptance testing.  After the task has completed
you can manually run the sample by pointing a browser to:  <a href="http://localhost:8080/tuscany-samples-customerWEB/">http://localhost:8080/tuscany-samples-customerWEB/</a>.
A page is displayed that prompts the user for a customer id. Submit an integer from 1 to 3.

<h3>Results</h3>

<p>Submitting an integer from 1 to 3 will result in the display of the corresponding employee record<br>

<h3>Code Overview</h3>

The following illustrates the structure of the sample application components:

<table style="text-align: left; width: 100%;" border="1" cellpadding="2" cellspacing="2">

    <tbody>

        <tr>

            <td>main<br>

                +---java<br>

                &brvbar;&nbsp;&nbsp; &brvbar;&nbsp;&nbsp;
                sca.module<br>

                &brvbar;&nbsp;&nbsp; &brvbar;<br>

                &brvbar;&nbsp;&nbsp; +---org<br>

                &brvbar;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

                +---apache<br>

                &brvbar;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                +---tuscany<br>

                &brvbar;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                +---samples<br>

                &brvbar;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

                +---customers<br>
                &brvbar;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                CustomerClient.java<br>
                &brvbar;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                CustomerServiceComponent.java<br>
                &brvbar;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                CustomerServiceComponentImpl.java<br>

                &brvbar;<br>

                +---webapp<br>

                &nbsp;&nbsp;&nbsp; &brvbar;&nbsp;&nbsp;
                Customer.jsp<br>

                &nbsp;&nbsp;&nbsp; &brvbar;<br>

                &nbsp;&nbsp;&nbsp; +---customerdb<br>

                &nbsp;&nbsp;&nbsp;&nbsp;&brvbar;&nbsp;&nbsp;&nbsp;&nbsp;
                <!--service.properties<br> -->

		    
		    &nbsp;&nbsp;&nbsp;&nbsp;&brvbar;&nbsp;&nbsp;&nbsp;<br>
		    			
		    <!--&nbsp;&nbsp;&nbsp;&nbsp;&brvbar;<br> -->
		    &nbsp;&nbsp;&nbsp;&nbsp;&brvbar;<br>	

		    &nbsp;&nbsp;&nbsp; +---WEB-INF<br>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp&nbsp;&nbsp;&nbsp; web.xml


                <br><br><br>

            </td>

        </tr>

    </tbody>
</table>


<br>

<table style="text-align: left; width: 879px; height: 154px;" border="2" cellpadding="4" cellspacing="4">

    <tbody>

        <tr>

            <td >sca.module</td>

            <td>  Defines the SCA module and component. Defines for the CustomerServiceComponent.</td>

        </tr>

	<tr>

            <td >CustomerClient.java</td>

            <td>	Wraps the get customer service to provide a clean "getCustomer()" API.</td>

        </tr>

	<tr>

            <td >CustomerServiceComponent.java</td>

            <td> 	Defines the interface of the service.</td>

        </tr>

	<tr>

            <td >Customer.jsp</td>

            <td>  Handles Web form input. Instantiates a CustomerClient instance and calls getCustomer()</td>

        </tr>

	<tr>

            <td >customerdb</td>

            <td>	The canned Derby database with Customer records </td>

        </tr>

	<tr>

            <td >web.xml </td>

            <td>Standard J2EE web application web.xml</td>

        </tr>


    
    </tbody>
</table>



</body></html>
