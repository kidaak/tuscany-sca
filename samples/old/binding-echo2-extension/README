Binding Echo Sample
===================
This sample demonstrates how new bindings are constructed for Apache Tuscany 
SCA using the lazy-loading approach where extensions are loaded only when they
are encountered during the processing of a composite defintion (SCDL)

The README in the samples directory (the directory above this) provides 
general instructions about building and running samples. Take a look there 
first. 

If you want to try out the echo binding that this sample provides
please see the binding-echo sample that provides the necessary client and
application code to bring up an application that uses this binding

Sample Overview
---------------
This sample contains a implementation of an SCA binding that simply echoes back 
any messages that are sent to it. 

binding-echo2-extension/
  src/
    main/
      java/
        echo2/                   
          extension/             - The bindings model classes, runtime classes 
          server/                - A dummy server that the binding is plugged into
      resources/
        META-INF/
          services/
            org.apache.tuscany.sca.contribution.processor.StAXArtifactProcessor - specifies the
                                 artifact processors to be loaded
            org.apache.tuscany.sca.provider.BindingProviderFactory - specifies the model classes for this binding                                 
    test/
      java/
        echo2/                    - test code
      resources/
        EchoBinding.composite    - the SCA assembly used by the unit test
  build.xml                      - the Ant build file
  pom.xml                        - the Maven build file
  

Building The Sample Using Ant
-----------------------------
With the binary distribution the sample can be built using Ant as 
follows

cd binding-echo2-extension
ant compile

See the binding-echo sample to run a sample that uses this binding. 

Building And Running The Sample Using Maven 
-------------------------------------------
With either the binary or source distributions the sample can be built and run 
using Maven as follows. 

cd binding-echo2-extension
mvn

Maven will also test that the sample extension built properly. You should see 
the following output from the test phase.

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running echo.EchoReferenceTestCase
Returned message: foo
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.111 sec
Running echo.EchoServiceTestCase
Returned message: foo
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.121 sec

Results :

Tests run: 2, Failures: 0, Errors: 0, Skipped: 0

This shows that the Junit test cases have run successfully. 
