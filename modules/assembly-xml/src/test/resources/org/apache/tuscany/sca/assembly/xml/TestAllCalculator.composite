<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.    
-->

<composite autowire="false" constrainingType="tns:CalculatorComponent" local="true" name="TestAllCalculator" policySets="sns:SecureReliablePolicy"
    requires="cns:confidentiality" targetNamespace="http://calc" xmlns:tns="http://calc"
    xmlns="http://www.osoa.org/xmlns/sca/1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.osoa.org/xmlns/sca/1.0 http://www.osoa.org/xmlns/sca/1.0 "
    xmlns:ext="http://extension"
    xmlns:cns="http://test" xmlns:sns="http://test">

    <include name="tns:TestAllDivide"/>
    <ext:testExtension/>

    <service name="CalculatorService" promote="CalculatorServiceComponent/CalculatorService" requires="cns:confidentiality"
        policySets="sns:SecureReliablePolicy">
        <ext:testExtension/>
        <interface.java interface="calculator.CalculatorService" callbackInterface="calculator.CalculatorCallback" />
        <operation name="add" policySets="sns:SecureReliablePolicy" requires="cns:confidentiality" />

        <binding.ws name="CalculatorWS" policySets="sns:SecureReliablePolicy" port="" requires="cns:confidentiality" uri="http://calc/ws">
            <operation name="add" policySets="sns:SecureReliablePolicy" requires="cns:confidentiality" />
        </binding.ws>

        <callback policySets="sns:SecureReliablePolicy" requires="cns:confidentiality">
	        <ext:testExtension/>
            <binding.ws name="CalculatorCallbackWS" policySets="" port="" requires="" uri="http://calc/callback/ws">
                <operation name="addCallback" policySets="sns:SecureReliablePolicy" requires="cns:confidentiality" />
            </binding.ws>
        </callback>
    </service>

    <component name="CalculatorServiceComponent" autowire="false" constrainingType="tns:CalculatorComponent"
        policySets="sns:SecureReliablePolicy" requires="cns:confidentiality">
        <ext:testExtension/>
        <service name="CalculatorService" policySets="sns:SecureReliablePolicy" requires="cns:confidentiality">
            <interface.java interface="calculator.CalculatorService" callbackInterface="calculator.CalculatorCallback" />
        </service>

        <reference name="addService" target="AddServiceComponent/AddService" autowire="false" multiplicity="1..1"
            policySets="sns:SecureReliablePolicy" requires="cns:confidentiality" wiredByImpl="false">
            <ext:testExtension/>
            <interface.java interface="calculator.AddService" callbackInterface="calculator.AddCallback" />
        </reference>
        <reference name="subtractService" target="SubtractServiceComponent" />
        <reference name="multiplyService" />
        <reference name="divideService" target="DivideServiceComponent" />

        <property name="round" type="xsd:boolean" many="false">true</property>

        <implementation.java class="calculator.CalculatorServiceImpl" policySets="" requires="" />
    </component>

    <component name="AddServiceComponent">
        <service name="AddService">
            <interface.java interface="calculator.AddService" />
        </service>
        <implementation.java class="calculator.AddServiceImpl" />
    </component>

    <component name="NestedCompositeComponent">
        <service name="CalculatorService">
            <interface.java interface="calculator.CalculatorService" />
        </service>
        <implementation.composite name="tns:Calculator" />
    </component>

    <component name="SubtractServiceComponent">
        <implementation.java class="calculator.SubtractServiceImpl" />
    </component>

    <component name="MultiplyServiceComponent">
        <implementation.java class="calculator.MultiplyServiceImpl" />
    </component>

    <component name="DivideServiceComponent">
        <implementation.java class="calculator.DivideServiceImpl" />
    </component>

    <reference name="MultiplyService" promote="CalculatorServiceComponent/multiplyService" policySets="sns:SecureReliablePolicy"
        requires="cns:confidentiality">
        <interface.java interface="calculator.MultiplyService" callbackInterface="calculator.MultiplyCallback" />
        <operation name="multiply" policySets="sns:SecureReliablePolicy" requires="cns:confidentiality" />

        <binding.ws name="MultiplyWS" port="" policySets="sns:SecureReliablePolicy" requires="cns:confidentiality" uri="http://calc/ws">
            <operation name="multiply" policySets="sns:SecureReliablePolicy" requires="cns:confidentiality" />
        </binding.ws>

        <callback policySets="sns:SecureReliablePolicy" requires="cns:confidentiality">
            <binding.ws name="MultiplyCallbackWS" port="" uri="http://calc/callback/ws" policySets="sns:SecureReliablePolicy"
                requires="cns:confidentiality">
                <operation name="multiplyCallback" policySets="sns:SecureReliablePolicy" requires="cns:confidentiality" />
            </binding.ws>
        </callback>
    </reference>

    <property name="prop1" xmlns:foo="http://foo">
    	<ext:testExtension/>
   	    <MyComplexPropertyValue1 xsi:type="foo:MyComplexType" attr="bar">
            <foo:a>AValue</foo:a>
            <bar:b xmlns:bar="http://bar">InterestingURI</bar:b>
        </MyComplexPropertyValue1>
        <MyComplexPropertyValue2 xsi:type="foo:MyComplexType" attr="zing">
            <foo:a>BValue</foo:a>
            <bar:b xmlns:bar="http://bar">BoringURI</bar:b>
        </MyComplexPropertyValue2>
    </property>

</composite>
